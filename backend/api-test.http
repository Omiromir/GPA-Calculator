### Store base URL
@base_url=https://gpa-calculator-backend-x981.onrender.com

### Register a New User
POST {{base_url}}/api/auth/register
Content-Type: application/json

{
  "username": "testuser",
  "email": "testuser@example.com",
  "password": "password123"
}

### Login User (Get JWT Token)
POST {{base_url}}/api/auth/login
Content-Type: application/json

{
  "email": "testuser@example.com",
  "password": "password123"
}

### Store Token (Copy the token from login response and replace `<TOKEN_HERE>`)
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3YmI0NjBlYWQ2MzM4ZWRmMWQxOTAyOCIsImlhdCI6MTc0MDMyNjQzMCwiZXhwIjoxNzQwMzMwMDMwfQ.RKpDGu_RX3naFwvEPA7K166hegCMsrBZ0xKyimgeROE

### Get User Profile (Protected)
GET {{base_url}}/api/users/profile
Authorization: Bearer {{token}}

### Update User Profile (Protected)
PUT {{base_url}}/api/users/profile
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "username": "updateduser",
  "email": "updateduser@example.com"
}
### Add a new gpa record for the user
POST {{base_url}}/api/gpa
Authorization: Bearer {{token}}

### Add a new semester for the user
POST {{base_url}}/api/gpa/semesters
Authorization: Bearer {{token}}

### Add a New Course (Example with ID 1)
POST {{base_url}}/api/gpa/1/courses
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Mathematics",
  "grade": "A",
  "credits": 4
}

### Get All Semesters for User
GET {{base_url}}/api/gpa
Authorization: Bearer {{token}}

### Update a Course in Semester 1
# Replace `<COURSE_ID>` with actual course ID from response
PUT {{base_url}}/api/gpa/1/courses/<COURSE_ID>
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Advanced Mathematics",
  "grade": "A+",
  "credits": 4
}

### Remove a Course from Semester 1
# Replace `<COURSE_ID>` with actual course ID from response
DELETE {{base_url}}/api/gpa/1/courses/<COURSE_ID>
Authorization: Bearer {{token}}

### Delete the user's profile
DELETE {{base_url}}/api/users/profile
Authorization: Bearer {{token}}